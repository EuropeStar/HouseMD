# Generated by Django 2.0.3 on 2018-04-30 03:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveSubstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='название')),
            ],
            options={
                'verbose_name': 'aктивное вещество',
                'verbose_name_plural': 'активные вещества',
            },
        ),
        migrations.CreateModel(
            name='AnalysisConstants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='параметр анализа')),
                ('lower_bound', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='нижняя граница')),
                ('upper_bound', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='верхняя граница')),
            ],
            options={
                'verbose_name': 'критическое значения анализа',
                'verbose_name_plural': 'критические значения анализов',
            },
        ),
        migrations.CreateModel(
            name='AnalysisParams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='значение')),
                ('deviation', models.DecimalField(decimal_places=2, max_digits=2, verbose_name='отклонение')),
                ('result', models.BooleanField(default=False, verbose_name='результат')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses_set',
                                           to='core.AnalysisConstants', verbose_name='параметр анализа')),
            ],
            options={
                'verbose_name': 'параметр анализа',
                'verbose_name_plural': 'параметры анализа',
            },
        ),
        migrations.CreateModel(
            name='Contraindication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contraindications', to='core.ActiveSubstance')),
            ],
            options={
                'verbose_name': 'противопоказание',
                'verbose_name_plural': 'противопоказания',
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='название')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
                ('analysis',
                 models.ManyToManyField(related_name='diseases', to='core.AnalysisParams', verbose_name='анализы')),
            ],
            options={
                'verbose_name': 'заболевание',
                'verbose_name_plural': 'заболевания',
            },
        ),
        migrations.CreateModel(
            name='DiseaseProbability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prob', models.DecimalField(decimal_places=2, default=0, max_digits=2, verbose_name='вероятность')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Disease',
                                              verbose_name='заболевание')),
            ],
            options={
                'verbose_name': 'вероятность заболевания',
                'verbose_name_plural': 'вероятности заболеваний',
            },
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient', models.CharField(max_length=50, verbose_name='ФИО пациента')),
                ('age', models.CharField(blank=True,
                                         choices=[(0, '0'), (1, '< 1 года'), (2, '1 - 5 лет'), (3, '5 - 18 лет'),
                                                  (4, '18 - 60 лет'), (5, '> 60 лет')], max_length=1,
                                         verbose_name='возраст')),
                ('sex', models.CharField(blank=True, choices=[('0', 'мужской'), ('1', 'женский')], max_length=1,
                                         verbose_name='пол')),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('analysis',
                 models.ManyToManyField(related_name='examinations', to='core.AnalysisParams', verbose_name='анализы')),
                ('contraindications', models.ManyToManyField(related_name='examinations', to='core.Contraindication',
                                                             verbose_name='противопоказания')),
                ('diseases', models.ManyToManyField(related_name='examinations', to='core.DiseaseProbability',
                                                    verbose_name='заболевания')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                             verbose_name='врач')),
            ],
            options={
                'verbose_name': 'обследование',
                'verbose_name_plural': 'обследования',
            },
        ),
        migrations.CreateModel(
            name='Med',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='название')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
                ('category', models.CharField(blank=True, max_length=100, verbose_name='класс принадлежности')),
                ('efficiency_class',
                 models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='класс эффективности')),
            ],
            options={
                'verbose_name': 'препарат',
                'verbose_name_plural': 'препараты',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='описание')),
                ('status', models.IntegerField(
                    choices=[(0, 'Диагноз подтвержден'), (1, 'Запрос на подтверждение диагноза'),
                             (2, 'Диагноз отклонен')], verbose_name='статус диагноза')),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('is_readed', models.BooleanField(default=False, verbose_name='прочитано')),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Disease',
                                                verbose_name='диагноз')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                           verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'уведомление',
                'verbose_name_plural': 'уведомления',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.CharField(blank=True, max_length=50)),
                ('organisation', models.CharField(max_length=50, verbose_name='место работы')),
                ('is_chief', models.BooleanField(default=False, verbose_name='должность главного врача')),
            ],
            options={
                'verbose_name': 'профиль',
                'verbose_name_plural': 'профили',
            },
        ),
        migrations.CreateModel(
            name='SideEffect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='название')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
            ],
            options={
                'verbose_name': 'побочный эффект',
                'verbose_name_plural': 'побочные эффекты',
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spec_type', models.CharField(
                    choices=[(0, 'терапевт'), (1, 'невролог'), (2, 'офтальмолог'), (3, 'хирург'), (4, 'кардиолог')],
                    max_length=2)),
            ],
            options={
                'verbose_name': 'специальность',
                'verbose_name_plural': 'специальности',
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='название')),
            ],
            options={
                'verbose_name': 'симптом',
                'verbose_name_plural': 'симптомы',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='specialization',
            field=models.ManyToManyField(related_name='specializations', to='core.Specialization',
                                         verbose_name='специализации'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                       verbose_name='пользователь'),
        ),
        migrations.AddField(
            model_name='med',
            name='side_effects',
            field=models.ManyToManyField(related_name='meds', to='core.SideEffect', verbose_name='побочные эффекты'),
        ),
        migrations.AddField(
            model_name='examination',
            name='meds',
            field=models.ManyToManyField(related_name='examinations', to='core.Med', verbose_name='лечащие препараты'),
        ),
        migrations.AddField(
            model_name='examination',
            name='symptoms',
            field=models.ManyToManyField(related_name='examinations', to='core.Symptom', verbose_name='симптомы'),
        ),
        migrations.AddField(
            model_name='disease',
            name='meds',
            field=models.ManyToManyField(related_name='diseases', to='core.Med', verbose_name='используемые препараты'),
        ),
        migrations.AddField(
            model_name='disease',
            name='symptoms',
            field=models.ManyToManyField(related_name='diseases', to='core.Symptom', verbose_name='симптомы'),
        ),
    ]
